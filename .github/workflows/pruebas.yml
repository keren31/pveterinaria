name: PWA CI/CD Workflow

# Disparadores para el workflow
on:
  push:
    branches:
      - '*'    # Ejecutar las pruebas en cualquier rama en cada push
  pull_request:
    branches:
      - main   # Ejecutar las pruebas antes de fusionar a main
  workflow_dispatch:

# Permisos para GitHub Actions
permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Move to project directory
        run: cd pveterinaria

      # 2. Configurar Node.js (para recat y Jest)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Versión de Node.js recomendada
          cache: 'npm'  # Configura el caché para npm automáticamente

      # 3. Instalación de dependencias
      - name: Install dependencies
        run: npm install
        working-directory: ./pveterinaria
      
      # 4. Compilar el proyecto React (npm run build)
      - name: Build React Project
        working-directory: ./pveterinaria
        run: npm run build --if-present
      
      # 5. Ejecutar pruebas unitarias con Jest
      - name: Run Jest tests
        working-directory: ./pveterinaria
        run: npm run test -- --ci --watchAll=false --coverage
      
       # 6. Almacenar el informe de cobertura (siempre)
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ./pveterinaria/coverage/ # Ajusta esta ruta si tu informe de cobertura se genera en un lugar diferente

  